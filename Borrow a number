Problem statement : You have two numbers number1 and number2, your job is to check the number of borrow operations needed for subtraction of number1 from number2. If the subtraction is not possible
then return the string not possible.

Example :
754
658
Answer :
2
654
666
Answer:
Not possible


-----------------code-------------------
import java.util.Scanner;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int num1 = sc.nextInt();
        int num2 = sc.nextInt();
        int count = 0;

        if (num1 < num2) {
            System.out.println("Not Possible");
        } else {
            boolean flag = false;

            while (num1 != 0 && num2 != 0) {
                int temp1, temp2;
                temp2 = num2 % 10;

                if (flag)
                    temp1 = (num1 % 10) - 1;
                else
                    temp1 = num1 % 10;

                if (temp1 < temp2) {
                    count++;
                    flag = true;
                } else {
                    flag = false;
                }

                num1 = num1 / 10;
                num2 = num2 / 10;
            }

            System.out.println(count);
        }
    }
}
